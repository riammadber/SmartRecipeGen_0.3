import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { ChefHat, Sparkles, Clock, Users, Settings, LogOut } from 'lucide-react';

interface RecipeGeneratorProps {
  onDisconnect: () => void;
}

export function RecipeGenerator({ onDisconnect }: RecipeGeneratorProps) {
  const [ingredients, setIngredients] = useState('');
  const [servings, setServings] = useState('4');
  const [cookingTime, setCookingTime] = useState('30');
  const [dietaryRestrictions, setDietaryRestrictions] = useState('');
  const [generatedRecipe, setGeneratedRecipe] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);

  const generateRecipe = async () => {
    if (!ingredients.trim()) return;
    
    setIsGenerating(true);
    
    // Simulate AI recipe generation
    setTimeout(() => {
      const recipe = `
# Delicious Recipe with ${ingredients}

## Ingredients:
${ingredients.split(',').map(ing => `- ${ing.trim()}`).join('\n')}
- Salt and pepper to taste
- 2 tbsp olive oil

## Instructions:
1. Prepare all ingredients by washing and chopping as needed
2. Heat olive oil in a large pan over medium heat
3. Add your main ingredients and cook for 5-7 minutes
4. Season with salt and pepper
5. Continue cooking until tender and flavors are well combined
6. Serve hot and enjoy!

## Cooking Time: ${cookingTime} minutes
## Servings: ${servings} people

${dietaryRestrictions ? `## Dietary Notes: ${dietaryRestrictions}` : ''}

*Generated by SmartRecipeGen AI*
      `;
      
      setGeneratedRecipe(recipe);
      setIsGenerating(false);
    }, 2000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 to-red-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center">
              <ChefHat className="w-8 h-8 text-orange-600 mr-3" />
              <h1 className="text-2xl font-bold text-gray-900">SmartRecipeGen</h1>
            </div>
            <Button 
              variant="outline" 
              onClick={onDisconnect}
              className="flex items-center"
            >
              <LogOut className="w-4 h-4 mr-2" />
              Disconnect
            </Button>
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Recipe Input */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <Sparkles className="w-5 h-5 mr-2 text-orange-600" />
                Generate Recipe
              </CardTitle>
              <CardDescription>
                Enter your available ingredients and preferences to generate a custom recipe
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="space-y-2">
                <label htmlFor="ingredients" className="text-sm font-medium text-gray-700">
                  Available Ingredients *
                </label>
                <Textarea
                  id="ingredients"
                  placeholder="chicken breast, broccoli, garlic, onion, rice..."
                  value={ingredients}
                  onChange={(e) => setIngredients(e.target.value)}
                  rows={3}
                />
              </div>
              
              <div className="grid grid-cols-2 gap-4">
                <div className="space-y-2">
                  <label htmlFor="servings" className="text-sm font-medium text-gray-700 flex items-center">
                    <Users className="w-4 h-4 mr-1" />
                    Servings
                  </label>
                  <Input
                    id="servings"
                    type="number"
                    min="1"
                    max="20"
                    value={servings}
                    onChange={(e) => setServings(e.target.value)}
                  />
                </div>
                
                <div className="space-y-2">
                  <label htmlFor="cookingTime" className="text-sm font-medium text-gray-700 flex items-center">
                    <Clock className="w-4 h-4 mr-1" />
                    Max Time (min)
                  </label>
                  <Input
                    id="cookingTime"
                    type="number"
                    min="5"
                    max="240"
                    value={cookingTime}
                    onChange={(e) => setCookingTime(e.target.value)}
                  />
                </div>
              </div>
              
              <div className="space-y-2">
                <label htmlFor="dietary" className="text-sm font-medium text-gray-700">
                  Dietary Restrictions (Optional)
                </label>
                <Input
                  id="dietary"
                  placeholder="vegetarian, gluten-free, dairy-free..."
                  value={dietaryRestrictions}
                  onChange={(e) => setDietaryRestrictions(e.target.value)}
                />
              </div>
              
              <Button 
                onClick={generateRecipe}
                disabled={!ingredients.trim() || isGenerating}
                className="w-full bg-orange-600 hover:bg-orange-700"
              >
                {isGenerating ? (
                  <>
                    <Settings className="w-4 h-4 mr-2 animate-spin" />
                    Generating Recipe...
                  </>
                ) : (
                  <>
                    <Sparkles className="w-4 h-4 mr-2" />
                    Generate Recipe
                  </>
                )}
              </Button>
            </CardContent>
          </Card>

          {/* Generated Recipe */}
          <Card>
            <CardHeader>
              <CardTitle>Your Generated Recipe</CardTitle>
              <CardDescription>
                AI-powered recipe based on your ingredients and preferences
              </CardDescription>
            </CardHeader>
            <CardContent>
              {generatedRecipe ? (
                <div className="prose prose-sm max-w-none">
                  <pre className="whitespace-pre-wrap text-sm text-gray-700 font-sans">
                    {generatedRecipe}
                  </pre>
                </div>
              ) : (
                <div className="text-center py-12 text-gray-500">
                  <ChefHat className="w-12 h-12 mx-auto mb-4 text-gray-300" />
                  <p>Enter your ingredients and click "Generate Recipe" to get started!</p>
                </div>
              )}
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}